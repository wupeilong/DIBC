<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd"
	default-lazy-init="true">
	<!--  自动扫描，	扫描以com.yichuan开头包中的所有有注解的类注入spring（IOC）,但是不扫描controller -->
	 <context:component-scan base-package="cn.dibcbks">
	   <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan> 
	<!-- 异常统一处理类 HandlerExceptionResolver 注释 -->
  	<bean id="handlerExceptionResolver" class="cn.dibcbks.exception.MyExceptionResolver" /> 
	<util:properties id="dbConf" location="classpath:config.properties" />

	<!-- 配置数据库的连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" >
		<property name="driverClassName" value="#{dbConf.driverClassName}" />
		<property name="url" value="#{dbConf.url}" />
		<property name="username" value="#{dbConf.username}" />
		<property name="password" value="#{dbConf.password}" />		
   </bean>
	<!-- SqlSessionFactoryBean的初始化 -->
	<bean id="factoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:mappers/*.xml" />		
	</bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" isolation="REPEATABLE_READ" rollback-for="Exception" />
			<tx:method name="update*" isolation="REPEATABLE_READ" rollback-for="Exception" />
			<tx:method name="delete*" isolation="REPEATABLE_READ" rollback-for="Exception" />
			<tx:method name="get*" isolation="REPEATABLE_READ" read-only="true" />
			<tx:method name="*" isolation="REPEATABLE_READ" propagation="NOT_SUPPORTED"/>
		</tx:attributes>	
	</tx:advice>
	
	<aop:config>
		<aop:pointcut expression="execution(* cn.dibcbks.service..*(..))" id="point"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="point"/>
	</aop:config> 
	
	
	<!-- 持久层接口扫描 -->
	<bean id="scannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.dibcbks.mapper"/>
	</bean>	
	<!-- remenberMe配置 -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
	   <constructor-arg value="rememberMe" />
	   <property name="httpOnly" value="true" />
	   <!-- 默认记住7天（单位：秒） -->
	   <property name="maxAge" value="-1" />
	</bean>
	<!-- rememberMe管理器 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
	   <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
	   <property name="cookie" ref="rememberMeCookie" />
	</bean>
	
	<bean id="myShiroRealm" class="cn.dibcbks.filter.MyShiroRealm" >
		 <!-- 凭证匹配器(密码加密) -->
	     <property name="credentialsMatcher">
    		<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
    			<property name="hashAlgorithmName" value="MD5"/>
    			<property name="hashIterations" value="1024"/> 
    		</bean>
    	</property> 
	</bean>
	<!-- 缓存管理器 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager"/>
	
	<!-- <bean id="myShiroRealm" class="cn.dibcbks.filter.MyShiroRealm" >
		 凭证匹配器(密码加密)
	     <property name="credentialsMatcher">
    		<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
    			<property name="hashAlgorithmName" value="MD5"/>
    			<property name="hashIterations" value="1024"/> 
    		</bean>
    	</property> 
	</bean> -->
	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myShiroRealm" />		
		<property name="cacheManager" ref="cacheManager"/> 
		<!--记住密码 remenberMe配置 -->
   		<property name="rememberMeManager" ref="rememberMeManager" />
	</bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />		
		<property name="loginUrl" value="/login" />
		<property name="successUrl" value="/hoem" />
		<property name="unauthorizedUrl" value="/error" />
		<property name="filterChainDefinitions">
			<value>
				/static/** = anon
				/login = anon
				/register = anon
				/registeradd = anon
				/userLogin = anon
				/admin_login = anon
				/*/** = authc
   			</value>
		</property>
	</bean>	
</beans>
































